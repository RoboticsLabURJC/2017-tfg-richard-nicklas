ROS Noetic Install process from https://wiki.ros.org/noetic/Installation/Ubuntu

    1  sudo sh -c 'echo "deb http://packages.ros.org/ros/ubuntu $(lsb_release -sc) main" > /etc/apt/sources.list.d/ros-latest.list'
    2  sudo apt install curl # if you haven't already installed curl
    3  curl -s https://raw.githubusercontent.com/ros/rosdistro/master/ros.asc | sudo apt-key add -
    4  sudo apt update
    5  sudo apt install ros-noetic-desktop-full

  You must source the script "/opt/ros/noetic/setup.bash" in every bash terminal you use ROS in.
  Or include it to ~/.bashrc

    1  echo "source /opt/ros/noetic/setup.bash" >> ~/.bashrc

  Dependencies for building packages

    1  sudo apt install python3-rosdep python3-rosinstall python3-rosinstall-generator python3-wstool build-essential
    2  sudo apt install python3-launch
    3  sudo rosdep init
    4  rosdep update

Gazebo from https://classic.gazebosim.org/tutorials?tut=ros_installing&cat=connect_ros

    1  sudo apt-get install ros-noetic-gazebo-ros-pkgs ros-noetic-gazebo-ros-control

  Setup A Catkin Workspace

    mkdir -p ~/catkin_ws/src
    cd ~/catkin_ws/src
    catkin_init_workspace
    cd ~/catkin_ws
    catkin_make

  Then add to your .bashrc file a source to the setup scripts:

    echo "source ~/catkin_ws/devel/setup.bash" >> ~/.bashrc

Verilator

    sudo apt-get install verilator


    Newer versions from source: https://verilator.org/guide/latest/install.html

	# Prerequisites:
	#sudo apt-get install git perl python3 make autoconf g++ flex bison ccache
	#sudo apt-get install libgoogle-perftools-dev numactl perl-doc
	#sudo apt-get install libfl2  # Ubuntu only (ignore if gives error)
	#sudo apt-get install libfl-dev  # Ubuntu only (ignore if gives error)
	#sudo apt-get install zlibc zlib1g zlib1g-dev  # Ubuntu only (ignore if gives error)

	git clone https://github.com/verilator/verilator   # Only first time

	# Every time you need to build:
	unset VERILATOR_ROOT  # For bash
	cd verilator
	git pull         # Make sure git repository is up-to-date
	git tag          # See what versions exist
	#git checkout master      # Use development branch (e.g. recent bug fixes)
	git checkout stable      # Use most recent stable release
	#git checkout v{version}  # Switch to specified release version

	autoconf         # Create ./configure script
	./configure      # Configure and create Makefile
	edit Makefile to modfy "prefix" to /usr
	make -j `nproc`  # Build Verilator itself (if error, try just 'make')
	sudo make install


SDL
    sudo apt-get install libsdl-dev
